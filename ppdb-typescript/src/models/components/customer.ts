/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type Customer = {
    customerID?: number | undefined;
    surname?: string | undefined;
    firstname?: string | undefined;
    address?: string | undefined;
    suburb?: string | undefined;
    postcode?: number | undefined;
    phone1?: string | undefined;
    phone2?: string | undefined;
    phone3?: string | undefined;
    email?: string | undefined;
};

/** @internal */
export namespace Customer$ {
    export const inboundSchema: z.ZodType<Customer, z.ZodTypeDef, unknown> = z
        .object({
            customerID: z.number().int().optional(),
            surname: z.string().optional(),
            firstname: z.string().optional(),
            address: z.string().optional(),
            suburb: z.string().optional(),
            postcode: z.number().int().optional(),
            phone1: z.string().optional(),
            phone2: z.string().optional(),
            phone3: z.string().optional(),
            email: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.customerID === undefined ? null : { customerID: v.customerID }),
                ...(v.surname === undefined ? null : { surname: v.surname }),
                ...(v.firstname === undefined ? null : { firstname: v.firstname }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.suburb === undefined ? null : { suburb: v.suburb }),
                ...(v.postcode === undefined ? null : { postcode: v.postcode }),
                ...(v.phone1 === undefined ? null : { phone1: v.phone1 }),
                ...(v.phone2 === undefined ? null : { phone2: v.phone2 }),
                ...(v.phone3 === undefined ? null : { phone3: v.phone3 }),
                ...(v.email === undefined ? null : { email: v.email }),
            };
        });

    export type Outbound = {
        customerID?: number | undefined;
        surname?: string | undefined;
        firstname?: string | undefined;
        address?: string | undefined;
        suburb?: string | undefined;
        postcode?: number | undefined;
        phone1?: string | undefined;
        phone2?: string | undefined;
        phone3?: string | undefined;
        email?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Customer> = z
        .object({
            customerID: z.number().int().optional(),
            surname: z.string().optional(),
            firstname: z.string().optional(),
            address: z.string().optional(),
            suburb: z.string().optional(),
            postcode: z.number().int().optional(),
            phone1: z.string().optional(),
            phone2: z.string().optional(),
            phone3: z.string().optional(),
            email: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.customerID === undefined ? null : { customerID: v.customerID }),
                ...(v.surname === undefined ? null : { surname: v.surname }),
                ...(v.firstname === undefined ? null : { firstname: v.firstname }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.suburb === undefined ? null : { suburb: v.suburb }),
                ...(v.postcode === undefined ? null : { postcode: v.postcode }),
                ...(v.phone1 === undefined ? null : { phone1: v.phone1 }),
                ...(v.phone2 === undefined ? null : { phone2: v.phone2 }),
                ...(v.phone3 === undefined ? null : { phone3: v.phone3 }),
                ...(v.email === undefined ? null : { email: v.email }),
            };
        });
}
