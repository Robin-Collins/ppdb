/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type PutBreedsBreedIDRequest = {
    breedID: number;
    breed: components.Breed;
};

export type PutBreedsBreedIDResponse = {
    httpMeta: components.HTTPMetadata;
};

/** @internal */
export namespace PutBreedsBreedIDRequest$ {
    export const inboundSchema: z.ZodType<PutBreedsBreedIDRequest, z.ZodTypeDef, unknown> = z
        .object({
            breedID: z.number().int(),
            Breed: components.Breed$.inboundSchema,
        })
        .transform((v) => {
            return {
                breedID: v.breedID,
                breed: v.Breed,
            };
        });

    export type Outbound = {
        breedID: number;
        Breed: components.Breed$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PutBreedsBreedIDRequest> = z
        .object({
            breedID: z.number().int(),
            breed: components.Breed$.outboundSchema,
        })
        .transform((v) => {
            return {
                breedID: v.breedID,
                Breed: v.breed,
            };
        });
}

/** @internal */
export namespace PutBreedsBreedIDResponse$ {
    export const inboundSchema: z.ZodType<PutBreedsBreedIDResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PutBreedsBreedIDResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
            };
        });
}
