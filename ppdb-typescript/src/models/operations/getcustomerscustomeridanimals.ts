/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetCustomersCustomerIDAnimalsRequest = {
    customerID: number;
};

export type GetCustomersCustomerIDAnimalsResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * A list of animals
     */
    animals?: Array<components.Animal> | undefined;
};

/** @internal */
export namespace GetCustomersCustomerIDAnimalsRequest$ {
    export const inboundSchema: z.ZodType<
        GetCustomersCustomerIDAnimalsRequest,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            customerID: z.number().int(),
        })
        .transform((v) => {
            return {
                customerID: v.customerID,
            };
        });

    export type Outbound = {
        customerID: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetCustomersCustomerIDAnimalsRequest
    > = z
        .object({
            customerID: z.number().int(),
        })
        .transform((v) => {
            return {
                customerID: v.customerID,
            };
        });
}

/** @internal */
export namespace GetCustomersCustomerIDAnimalsResponse$ {
    export const inboundSchema: z.ZodType<
        GetCustomersCustomerIDAnimalsResponse,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            Animals: z.array(components.Animal$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.Animals === undefined ? null : { animals: v.Animals }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        Animals?: Array<components.Animal$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetCustomersCustomerIDAnimalsResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            animals: z.array(components.Animal$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.animals === undefined ? null : { Animals: v.animals }),
            };
        });
}
