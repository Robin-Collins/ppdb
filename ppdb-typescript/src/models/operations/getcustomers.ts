/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetCustomersRequest = {
    page?: number | undefined;
    limit?: number | undefined;
    sort?: string | undefined;
};

export type GetCustomersResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * A list of customers
     */
    customers?: Array<components.Customer> | undefined;
};

/** @internal */
export namespace GetCustomersRequest$ {
    export const inboundSchema: z.ZodType<GetCustomersRequest, z.ZodTypeDef, unknown> = z
        .object({
            page: z.number().int().default(1),
            limit: z.number().int().default(10),
            sort: z.string().optional(),
        })
        .transform((v) => {
            return {
                page: v.page,
                limit: v.limit,
                ...(v.sort === undefined ? null : { sort: v.sort }),
            };
        });

    export type Outbound = {
        page: number;
        limit: number;
        sort?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetCustomersRequest> = z
        .object({
            page: z.number().int().default(1),
            limit: z.number().int().default(10),
            sort: z.string().optional(),
        })
        .transform((v) => {
            return {
                page: v.page,
                limit: v.limit,
                ...(v.sort === undefined ? null : { sort: v.sort }),
            };
        });
}

/** @internal */
export namespace GetCustomersResponse$ {
    export const inboundSchema: z.ZodType<GetCustomersResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            Customers: z.array(components.Customer$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.Customers === undefined ? null : { customers: v.Customers }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        Customers?: Array<components.Customer$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetCustomersResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            customers: z.array(components.Customer$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.customers === undefined ? null : { Customers: v.customers }),
            };
        });
}
