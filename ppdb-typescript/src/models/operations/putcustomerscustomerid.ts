/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type PutCustomersCustomerIDRequest = {
    customerID: number;
    customer: components.Customer;
};

export type PutCustomersCustomerIDResponse = {
    httpMeta: components.HTTPMetadata;
};

/** @internal */
export namespace PutCustomersCustomerIDRequest$ {
    export const inboundSchema: z.ZodType<PutCustomersCustomerIDRequest, z.ZodTypeDef, unknown> = z
        .object({
            customerID: z.number().int(),
            Customer: components.Customer$.inboundSchema,
        })
        .transform((v) => {
            return {
                customerID: v.customerID,
                customer: v.Customer,
            };
        });

    export type Outbound = {
        customerID: number;
        Customer: components.Customer$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PutCustomersCustomerIDRequest> =
        z
            .object({
                customerID: z.number().int(),
                customer: components.Customer$.outboundSchema,
            })
            .transform((v) => {
                return {
                    customerID: v.customerID,
                    Customer: v.customer,
                };
            });
}

/** @internal */
export namespace PutCustomersCustomerIDResponse$ {
    export const inboundSchema: z.ZodType<PutCustomersCustomerIDResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PutCustomersCustomerIDResponse> =
        z
            .object({
                httpMeta: components.HTTPMetadata$.outboundSchema,
            })
            .transform((v) => {
                return {
                    HttpMeta: v.httpMeta,
                };
            });
}
