/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type PutNotesNoteIDRequest = {
    noteID: number;
    note: components.Note;
};

export type PutNotesNoteIDResponse = {
    httpMeta: components.HTTPMetadata;
};

/** @internal */
export namespace PutNotesNoteIDRequest$ {
    export const inboundSchema: z.ZodType<PutNotesNoteIDRequest, z.ZodTypeDef, unknown> = z
        .object({
            noteID: z.number().int(),
            Note: components.Note$.inboundSchema,
        })
        .transform((v) => {
            return {
                noteID: v.noteID,
                note: v.Note,
            };
        });

    export type Outbound = {
        noteID: number;
        Note: components.Note$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PutNotesNoteIDRequest> = z
        .object({
            noteID: z.number().int(),
            note: components.Note$.outboundSchema,
        })
        .transform((v) => {
            return {
                noteID: v.noteID,
                Note: v.note,
            };
        });
}

/** @internal */
export namespace PutNotesNoteIDResponse$ {
    export const inboundSchema: z.ZodType<PutNotesNoteIDResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PutNotesNoteIDResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
            };
        });
}
