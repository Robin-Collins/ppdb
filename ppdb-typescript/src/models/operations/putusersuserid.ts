/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type PutUsersUserIDRequest = {
    userID: number;
    user: components.User;
};

export type PutUsersUserIDResponse = {
    httpMeta: components.HTTPMetadata;
};

/** @internal */
export namespace PutUsersUserIDRequest$ {
    export const inboundSchema: z.ZodType<PutUsersUserIDRequest, z.ZodTypeDef, unknown> = z
        .object({
            userID: z.number().int(),
            User: components.User$.inboundSchema,
        })
        .transform((v) => {
            return {
                userID: v.userID,
                user: v.User,
            };
        });

    export type Outbound = {
        userID: number;
        User: components.User$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PutUsersUserIDRequest> = z
        .object({
            userID: z.number().int(),
            user: components.User$.outboundSchema,
        })
        .transform((v) => {
            return {
                userID: v.userID,
                User: v.user,
            };
        });
}

/** @internal */
export namespace PutUsersUserIDResponse$ {
    export const inboundSchema: z.ZodType<PutUsersUserIDResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PutUsersUserIDResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
            };
        });
}
